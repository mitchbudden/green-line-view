{"version":3,"sources":["components/App.tsx","reportWebVitals.ts","index.tsx"],"names":["App","props","lines","getStatsByTeam","TeamList","NFLData","teamList","data","gameList","forEach","team","teamTotal","total","game","diff","push","sort","a","b","className","this","map","line","toFixed","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6PA+DeA,E,kDAvDb,WAAYC,GAAa,IAAD,8BACtB,cAAMA,IAHDC,WAEiB,EAEtB,EAAKA,MAAQ,EAAKC,eAAeC,EAAUC,GAFrB,E,kDAKxB,SAAeC,EAAeC,GAC5B,IAAIC,EAAgB,GAsBpB,OApBAF,EAASG,SAAQ,SAACC,GAChB,IAAIC,EAAY,CAAED,OAAME,MAAO,GAE/BL,EAAKE,SAAQ,SAACI,GACZ,IAAIC,EAAQD,EAAK,kBAAoBA,EAAK,eAErCA,EAAK,eAAiBH,GAAQG,EAAK,eAAiBH,GAC7B,UAArBG,EAAK,cAENF,EAAUC,OAASE,MAI3BN,EAASO,KAAKJ,MAGhBH,EAASQ,MAAK,SAACC,EAAQC,GACrB,OAAQA,EAAEN,MAAQK,EAAEL,SAGfJ,I,oBAGT,WACE,OACE,sBAAKW,UAAU,MAAf,UACE,yBAAQA,UAAU,aAAlB,UACE,+CAGA,oGAEF,qBAAKA,UAAU,gBAAf,SACGC,KAAKlB,MAAMmB,KAAI,SAACC,GACb,OACE,sBAAKH,UAAU,iBAAf,UACE,qBAAIA,UAAU,WAAd,UAA0BG,EAAKZ,KAA/B,OACA,oBAAIS,UAAU,WAAd,SAA0BG,EAAKV,MAAMW,QAAQ,oB,GAhD7CC,IAAMC,WCSTC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.cb85b0f2.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\nimport NFLData from '../data/2021.json';\nimport TeamList from '../data/team-list.json';\n\nclass App extends React.Component {\n  public lines: any;\n\n  constructor(props: any) {\n    super(props);\n    this.lines = this.getStatsByTeam(TeamList, NFLData);\n  }\n\n  getStatsByTeam(teamList: any, data: any) {\n    let gameList: any = [];\n\n    teamList.forEach((team: string) => {\n      let teamTotal = { team, total: 0 }\n\n      data.forEach((game: any) => {\n        let diff = (game[\"Greenline Line\"] - game[\"Market Line\"]);\n\n        if ((game[\"Home Team\"] === team || game[\"Away Team\"] === team)\n            && game[\"Bet Type\"] === \"Total\") \n            {\n              teamTotal.total += diff;\n            }\n      });\n\n      gameList.push(teamTotal)\n    });\n\n    gameList.sort((a: any, b: any) => {\n      return  b.total - a.total;\n    });\n\n    return gameList;\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h1>\n            PFF Greenline\n          </h1>\n          <h2>Too High or too Low? Expected points minus actual points scored</h2>\n        </header>\n        <div className=\"data-exterior\">\n          {this.lines.map((line: any) => {\n              return (\n                <div className=\"data-container\">\n                  <h2 className=\"data-row\">{line.team}:</h2>\n                  <h2 className=\"data-row\">{line.total.toFixed(1)}</h2>\n                </div>\n              )\n            })}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}